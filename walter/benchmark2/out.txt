/Applications/BEAST\ 2.7.5/bin/beast -beagle_SSE W2.xml 

                        BEAST v2.7.5, 2002-2023
             Bayesian Evolutionary Analysis Sampling Trees
                       Designed and developed by
 Remco Bouckaert, Alexei J. Drummond, Andrew Rambaut & Marc A. Suchard
                                    
                   Centre for Computational Evolution
                         University of Auckland
                       r.bouckaert@auckland.ac.nz
                        alexei@cs.auckland.ac.nz
                                    
                   Institute of Evolutionary Biology
                        University of Edinburgh
                           a.rambaut@ed.ac.uk
                                    
                    David Geffen School of Medicine
                 University of California, Los Angeles
                           msuchard@ucla.edu
                                    
                      Downloads, Help & Resources:
                           http://beast2.org/
                                    
  Source code distributed under the GNU Lesser General Public License:
                   http://github.com/CompEvol/beast2
                                    
                           BEAST developers:
   Alex Alekseyenko, Trevor Bedford, Erik Bloomquist, Joseph Heled, 
 Sebastian Hoehna, Denise Kuehnert, Philippe Lemey, Wai Lok Sibon Li, 
Gerton Lunter, Sidney Markowitz, Vladimir Minin, Michael Defoin Platel, 
          Oliver Pybus, Tim Vaughan, Chieh-Hsi Wu, Walter Xie
                                    
                               Thanks to:
          Roald Forsberg, Beth Shapiro and Korbinian Strimmer

Random number seed: 1689560629475

File: W2.xml seed: 1689560629475 threads: 1
Loading package SSM v1.2.0 FastRelaxedClockLogNormal v1.2.0 feast v9.4.0 NS v1.2.1 bModelTest v1.3.3 LPhyBeastExt v0.2.1 starbeast3 v1.1.7 SpeciesNetwork v1.0.0 Mascot v3.0.0 phylonco v1.0.1 TreeStat2 v0.1.1 Babel v0.4.1 SA v2.1.1 BEAST.base v2.7.5 BEASTLabs v2.0.0 BEAST.app v2.7.5 BEAST_CLASSIC v1.6.2 CodonSubstModels v2.0.0 MM v1.2.1 CoupledMCMC v1.2.1 BDSKY v1.5.0 OBAMA v1.1.1 bdtree v0.0.1 ORC v1.1.1 MODEL_SELECTION v1.6.1 lphybeast v1.0.1    
Abi: 100 4
Aco: 100 4
Ame: 100 4
Ara: 100 4
Ath: 100 4
Atr: 100 4
Bdi: 100 4
Cep: 100 4
Cga: 100 4
Cun: 100 4
Cyc: 100 4
Eph: 100 4
Fok: 100 4
Gin: 100 4
Gma: 100 4
Gne: 100 4
Lja: 100 4
Ltu: 100 4
Mac: 100 4
Met: 100 4
Alignment(benchmark)
  20 taxa
  100 sites
  82 patterns

Abi=NOT_SET
Aco=NOT_SET
Ame=NOT_SET
Ara=NOT_SET
Ath=NOT_SET
Atr=NOT_SET
Bdi=NOT_SET
Cep=NOT_SET
Cga=NOT_SET
Cun=NOT_SET
Cyc=NOT_SET
Eph=NOT_SET
Fok=NOT_SET
Gin=NOT_SET
Gma=NOT_SET
Gne=NOT_SET
Lja=NOT_SET
Ltu=NOT_SET
Mac=NOT_SET
Met=NOT_SET
Abi = NOT_SET (NaN)
Aco = NOT_SET (NaN)
Ame = NOT_SET (NaN)
Ara = NOT_SET (NaN)
Ath = NOT_SET (NaN)
Atr = NOT_SET (NaN)
Bdi = NOT_SET (NaN)
Cep = NOT_SET (NaN)
Cga = NOT_SET (NaN)
Cun = NOT_SET (NaN)
10 more...
Wrong number of migration elements, assume asymmetric migration:
the dimension of migrationConstant.t:benchmark is set to 0
Mascot native library not loaded
Mascot native library not loaded
Using Euler2ndOrder
Starting frequencies: [0.25, 0.25, 0.25, 0.25]
  UCRelaxedClockModel: using real rates for rate distribution across branches.
  Using BEAGLE version: 4.0.0 (PRE-RELEASE) resource 0: CPU (x86_64)
    with instance flags:  PRECISION_DOUBLE COMPUTATION_SYNCH EIGEN_REAL SCALING_MANUAL SCALERS_RAW VECTOR_SSE THREADING_NONE PROCESSOR_CPU FRAMEWORK_CPU
  Ignoring ambiguities in tree likelihood.
  Ignoring character uncertainty in tree likelihood.
  With 82 unique site patterns.
  Using rescaling scheme : dynamic
===============================================================================
Citations for this model:

Bouckaert, Remco, Timothy G. Vaughan, Joëlle Barido-Sottani, Sebastián Duchêne, Mathieu Fourment, 
Alexandra Gavryushkina, Joseph Heled, Graham Jones, Denise Kühnert, Nicola De Maio, Michael Matschiner, 
Fábio K. Mendes, Nicola F. Müller, Huw A. Ogilvie, Louis du Plessis, Alex Popinga, Andrew Rambaut, 
David Rasmussen, Igor Siveroni, Marc A. Suchard, Chieh-Hsi Wu, Dong Xie, Chi Zhang, Tanja Stadler, 
Alexei J. Drummond 
  BEAST 2.5: An advanced software platform for Bayesian evolutionary analysis. 
  PLoS computational biology 15, no. 4 (2019): e1006650.

Nicola F. Müller, David A. Rasmussen, Tanja Stadler (2017)
  The Structured Coalescent and its Approximations.
  Mol Biol Evol 2017 msx186. doi: 10.1093/molbev/msx186

Drummond AJ, Ho SYW, Phillips MJ, Rambaut A (2006) Relaxed Phylogenetics and
  Dating with Confidence. PLoS Biol 4(5): e88

Nicola F. Müller, David A. Rasmussen, Tanja Stadler (2018)
  MASCOT: parameter and state inference under the marginal
  structured coalescent approximation
  Bioinformatics, , bty406, https://doi.org/10.1093/bioinformatics/bty406

Douglas J, Zhang R, Bouckaert R. Adaptive dating and fast proposals: Revisiting the phylogenetic relaxed clock model. PLoS computational biology. 2021 Feb 2;17(2):e1008322.

Zhang, R., Drummond, A. (2020) Improving the performance of Bayesian phylogenetic inference
  under relaxed clock models. BMC Evol Biol 20, 54

Bouckaert RR. An efficient coalescent epoch model for Bayesian phylogenetic inference. Systematic Biology, syac015, 2022

===============================================================================
Start likelihood: -2871.569840354213 
WARNING: Loggers appear to have different log frequency.
WARNING: This may cause problems in post-processing based on more than one log files.
WARNING: Therefore, it is recommended to use the same log frequency
Hint: note that TreeWithMetaDataLogger with dp="X" prints out trees with decimal places, potentially reducing tree file sizes substantially.
Writing file W2.log
Writing file W2-benchmark.trees
Writing file W2.benchmark.trees
         Sample      posterior     likelihood          prior
              0     -2871.5698     -2678.1727      -193.3970 --
         100000     -1411.4887     -1360.3055       -51.1831 --
         200000     -1421.1927     -1360.9334       -60.2592 --
         300000     -1408.2235     -1362.1368       -46.0866 --
         400000     -1416.3843     -1352.2715       -64.1128 --
         500000     -1415.6596     -1362.8925       -52.7671 --
         600000     -1424.0395     -1362.6304       -61.4090 21s/Msamples
         700000     -1402.7669     -1365.4598       -37.3070 21s/Msamples
         800000     -1419.9614     -1353.3873       -66.5741 21s/Msamples
         900000     -1425.0196     -1362.5704       -62.4491 21s/Msamples
        1000000     -1418.3205     -1362.2789       -56.0415 21s/Msamples
        1100000     -1408.4712     -1357.0516       -51.4195 21s/Msamples
        1200000     -1417.0135     -1363.0436       -53.9698 21s/Msamples
        1300000     -1406.1994     -1364.8048       -41.3945 21s/Msamples
        1400000     -1412.1430     -1356.7993       -55.3436 21s/Msamples
        1500000     -1414.6957     -1356.1000       -58.5956 21s/Msamples
        1600000     -1439.2541     -1373.6358       -65.6183 21s/Msamples
        1700000     -1420.3971     -1354.7298       -65.6672 21s/Msamples
        1800000     -1414.8849     -1358.7164       -56.1685 21s/Msamples
        1900000     -1427.1861     -1359.3990       -67.7870 21s/Msamples
        2000000     -1420.3737     -1368.0380       -52.3357 21s/Msamples
        2100000     -1401.1505     -1355.4133       -45.7372 21s/Msamples
        2200000     -1428.8258     -1364.9210       -63.9048 21s/Msamples
        2300000     -1400.9764     -1363.4418       -37.5346 21s/Msamples
        2400000     -1388.9498     -1365.3363       -23.6135 21s/Msamples
        2500000     -1414.7306     -1362.5971       -52.1334 21s/Msamples
        2600000     -1430.5095     -1362.2939       -68.2155 21s/Msamples
        2700000     -1424.7373     -1356.1375       -68.5997 21s/Msamples
        2800000     -1407.2123     -1361.8161       -45.3962 21s/Msamples
        2900000     -1402.2691     -1362.2717       -39.9974 21s/Msamples
        3000000     -1403.4841     -1357.1378       -46.3462 21s/Msamples
        3100000     -1425.9935     -1360.2929       -65.7006 21s/Msamples
        3200000     -1405.4655     -1358.6929       -46.7726 21s/Msamples
        3300000     -1408.9588     -1357.1819       -51.7768 21s/Msamples
        3400000     -1419.5132     -1358.8877       -60.6254 21s/Msamples
        3500000     -1414.9292     -1356.5941       -58.3351 21s/Msamples
        3600000     -1405.5739     -1357.0962       -48.4777 21s/Msamples
        3700000     -1425.6569     -1371.7360       -53.9209 21s/Msamples
        3800000     -1412.9387     -1364.0911       -48.8475 21s/Msamples
        3900000     -1419.0712     -1359.5732       -59.4980 21s/Msamples
        4000000     -1399.6782     -1364.9801       -34.6980 21s/Msamples
        4100000     -1410.5664     -1362.4051       -48.1613 21s/Msamples
        4200000     -1396.4985     -1358.9937       -37.5048 21s/Msamples
        4300000     -1409.9832     -1357.7299       -52.2532 21s/Msamples
        4400000     -1410.0629     -1366.1767       -43.8861 21s/Msamples
        4500000     -1415.9292     -1357.3423       -58.5868 21s/Msamples
        4600000     -1445.2396     -1368.6550       -76.5846 21s/Msamples
        4700000     -1409.8136     -1355.5754       -54.2382 21s/Msamples
        4800000     -1415.3497     -1356.8603       -58.4893 21s/Msamples
        4900000     -1420.0183     -1355.0988       -64.9194 21s/Msamples
        5000000     -1421.1888     -1357.5973       -63.5914 21s/Msamples
        5100000     -1418.6964     -1360.7184       -57.9780 21s/Msamples
        5200000     -1416.1482     -1358.7596       -57.3886 21s/Msamples
        5300000     -1419.7941     -1354.8425       -64.9516 21s/Msamples
        5400000     -1444.6670     -1371.4065       -73.2605 21s/Msamples
        5500000     -1406.0223     -1348.5994       -57.4229 21s/Msamples
        5600000     -1407.4949     -1353.7435       -53.7513 21s/Msamples
        5700000     -1420.7817     -1359.2229       -61.5587 21s/Msamples
        5800000     -1423.4488     -1361.8115       -61.6373 21s/Msamples
        5900000     -1415.6319     -1356.8281       -58.8038 21s/Msamples
        6000000     -1390.3136     -1359.4389       -30.8746 21s/Msamples
        6100000     -1435.8006     -1366.3785       -69.4221 21s/Msamples
        6200000     -1407.6357     -1358.4769       -49.1587 21s/Msamples
        6300000     -1403.8280     -1357.5671       -46.2608 21s/Msamples
        6400000     -1428.5902     -1373.9107       -54.6794 21s/Msamples
        6500000     -1418.1158     -1358.8092       -59.3065 21s/Msamples
        6600000     -1411.5315     -1356.2901       -55.2413 21s/Msamples
        6700000     -1421.0066     -1362.3083       -58.6983 21s/Msamples
        6800000     -1411.1501     -1360.6558       -50.4942 21s/Msamples
        6900000     -1436.5903     -1365.6097       -70.9805 21s/Msamples
        7000000     -1412.3826     -1360.6861       -51.6965 21s/Msamples
        7100000     -1397.3036     -1360.0276       -37.2760 21s/Msamples
        7200000     -1408.6288     -1366.9559       -41.6729 21s/Msamples
        7300000     -1417.6352     -1361.9558       -55.6794 21s/Msamples
        7400000     -1430.4586     -1360.4567       -70.0019 21s/Msamples
        7500000     -1411.1129     -1359.9587       -51.1542 21s/Msamples
        7600000     -1418.9519     -1358.2663       -60.6855 21s/Msamples
        7700000     -1414.0357     -1355.8323       -58.2033 21s/Msamples
        7800000     -1407.7377     -1359.3064       -48.4313 21s/Msamples
        7900000     -1406.6882     -1360.7561       -45.9321 21s/Msamples
        8000000     -1413.3045     -1358.2489       -55.0556 21s/Msamples
        8100000     -1395.2508     -1361.2066       -34.0442 21s/Msamples
        8200000     -1415.4571     -1360.6418       -54.8152 21s/Msamples
        8300000     -1413.6516     -1358.6767       -54.9748 21s/Msamples
        8400000     -1409.1284     -1365.7112       -43.4172 21s/Msamples
        8500000     -1431.1161     -1360.1943       -70.9217 21s/Msamples
        8600000     -1422.7787     -1363.3028       -59.4759 21s/Msamples
        8700000     -1416.6376     -1366.5706       -50.0669 21s/Msamples
        8800000     -1399.5641     -1354.5707       -44.9933 21s/Msamples
        8900000     -1412.1745     -1365.3220       -46.8524 21s/Msamples
        9000000     -1403.0411     -1357.9126       -45.1285 21s/Msamples
        9100000     -1387.5785     -1353.7158       -33.8627 21s/Msamples
        9200000     -1415.8009     -1364.7340       -51.0668 21s/Msamples
        9300000     -1408.2770     -1357.2907       -50.9863 21s/Msamples
        9400000     -1405.6227     -1354.2590       -51.3637 21s/Msamples
        9500000     -1411.4111     -1362.4347       -48.9764 21s/Msamples
        9600000     -1394.4420     -1355.5348       -38.9071 21s/Msamples
        9700000     -1405.2830     -1354.8713       -50.4117 21s/Msamples
        9800000     -1420.6953     -1363.9549       -56.7404 21s/Msamples
        9900000     -1431.4095     -1361.2160       -70.1934 21s/Msamples
       10000000     -1414.1516     -1357.8847       -56.2668 21s/Msamples

Operator                                                                             Tuning    #accept    #reject      Pr(m)  Pr(acc|m)
AdaptableOperatorSampler(RateACScaler.s:benchmark)                                        -       1390       3409    0.00047    0.28964 
AdaptableOperatorSampler(RateAGScaler.s:benchmark)                                        -       1345       3377    0.00047    0.28484 
AdaptableOperatorSampler(RateATScaler.s:benchmark)                                        -       1342       3339    0.00047    0.28669 
AdaptableOperatorSampler(RateCGScaler.s:benchmark)                                        -       1490       3225    0.00047    0.31601 
AdaptableOperatorSampler(RateGTScaler.s:benchmark)                                        -       1462       3242    0.00047    0.31080 
AdaptableOperatorSampler(FrequenciesExchanger.s:benchmark)                                -       1618       3184    0.00047    0.33694 
AdaptableOperatorSampler(ORCAdaptableOperatorSampler_sigma.c:benchmark)                   -      79526     205731    0.02849    0.27879 
AdaptableOperatorSampler(ORCAdaptableOperatorSampler_rates_root.c:benchmark)              -      34994      59543    0.00950    0.37016 
AdaptableOperatorSampler(ORCAdaptableOperatorSampler_rates_internal.c:benchmark)          -     556231    1344497    0.18993    0.29264 
AdaptableOperatorSampler(ORCAdaptableOperatorSampler_NER.c:benchmark)                     -     319011    1105210    0.14245    0.22399 
EpochFlexOperator(MascotBICEPSEpochTop.t:benchmark)                                 0.22040      62868     126406    0.01899    0.33215 
EpochFlexOperator(MascotBICEPSEpochAll.t:benchmark)                                 0.22389      62181     127439    0.01899    0.32792 
TreeStretchOperator(MascotBICEPSTreeFlex.t:benchmark)                               0.10508      79904     110265    0.01899    0.42017 Try setting scale factor to about 0.11
kernel.BactrianScaleOperator(MascotTreeRootScaler.t:benchmark)                      0.27450      69908     214517    0.02849    0.24579 
kernel.BactrianNodeOperator(MascotUniformOperator.t:benchmark)                      1.76818     888830    1961493    0.28490    0.31183 
kernel.BactrianSubtreeSlide(MascotSubtreeSlide.t:benchmark)                         0.67117       3782    1420232    0.14245    0.00266 Try decreasing size to about 0.336
Exchange(MascotNarrow.t:benchmark)                                                        -          0          0    0.00000        NaN 
Exchange(MascotWide.t:benchmark)                                                          -       2841     281600    0.02849    0.00999 
WilsonBalding(MascotWilsonBalding.t:benchmark)                                            -       3284     280481    0.02849    0.01157 
ScaleOperator(NeConstantScaler.t:benchmark)                                         0.34345      76567     208852    0.02849    0.26826 
ScaleOperator(migrationConstantScaler.t:benchmark)                                  0.47816          0     285385    0.02849    0.00000 Try setting scaleFactor to about 0.691

     Tuning: The value of the operator's tuning parameter, or '-' if the operator can't be optimized.
    #accept: The total number of times a proposal by this operator has been accepted.
    #reject: The total number of times a proposal by this operator has been rejected.
      Pr(m): The probability this operator is chosen in a step of the MCMC (i.e. the normalized weight).
  Pr(acc|m): The acceptance probability (#accept as a fraction of the total proposals for this operator).


Total calculation time: 213.478 seconds
End likelihood: -1414.1516083077677
Done!